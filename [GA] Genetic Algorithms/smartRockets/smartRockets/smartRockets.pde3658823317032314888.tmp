//Population pop;
int nSpecies = 3;
Specie[] species;
Specie specie1;
ArrayList<Obstacle> obs;
int lifespan = 600;
int count = 0;
PVector target;
int gen = 0;
boolean pause;
int speed = 15;
float m1x,m2x; 
float m1y,m2y;
float avgFit = 0;
float bestFit = 0;
int bestTime = 0;
boolean allInactive = true;

void setup(){
  size(600,600);
  reset();
  obs = new ArrayList<Obstacle>();
  /*obs.add( new Obstacle(270,330,375,20) );
  obs.add( new Obstacle(0,330,140,20) );
  obs.add( new Obstacle(100,210,140,20) );
  obs.add( new Obstacle(240,150,130,20) );*/
  target = new PVector(width/2,50);
}
void reset(){
  species = new Specie[nSpecies];
  species[0] = new Specie(color(230,0,0) );
  species[1] = new Specie(color(0,230,0) );
  species[2] = new Specie(color(0,0,230) );
  //pop = new Population();
  count = 0;
  gen = 0;
}
void draw(){
  background(0);
  fill(255);
  ellipse(target.x,target.y,10,10);
  for(Obstacle o : obs){
    o.show();
  }
  if(!pause){
    text("gen: "+gen,30,30);
    text("speed: "+speed,30,40);
    text("count: "+count,30,50);
    text("avg fit: "+(avgFit*1000),width-140,height-20);
    text("best time: "+(bestTime),width-140,height-30);
    for(int i=0;i<speed;i++){
    //pop.run();
    for(Specie s : species)
      s.run();
    count++;
    allInactive = false;
    /*for(Rocket r : pop.rockets){
      if(!(r.crashed||r.completed)){
        allInactive = false;
      }
    } */   
    
    if(count==lifespan||allInactive){
      for(Specie s : species){
      s.evaluate();
      s.displayStats();
      s.selection();
      }
      /*pop.evaluate(new float[]{1,1,2,0.1});
      pop.displayStats();
      pop.selection();*/
      count = 0;
      gen++;
    }
    i++;
    }
  }
}


  void mouseReleased(){
    m2x = mouseX;
    m2y = mouseY;
    int dx = (int)(m2x-m1x);
    int dy = (int)(m2y-m1y);
    if(dx>=10&&dy>=10)
    obs.add(new Obstacle(m1x,m1y,dx,dy));
  }
void mousePressed(){
  for(Obstacle o : obs){
    if(!o.checkCollision(mouseX,mouseY))
      m1x = mouseX;
      m1y = mouseY;
  }
}
void mouseClicked(){
  if(mouseButton==RIGHT){
    for(int i=0;i<obs.size();i++){
    if(obs.get(i).checkCollision(mouseX,mouseY))
    obs.remove(i);
  }
  }
}
void keyPressed(){
  if(key=='r'){
    reset();
  }
  if(key=='p'){
    pause = !pause;
  }
  if(key=='+'){
    if(speed<30)
    speed++;
  }
  if(key=='-'){
    if(speed>1)
    speed--;
  }
}